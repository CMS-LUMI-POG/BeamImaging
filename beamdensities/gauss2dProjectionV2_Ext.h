/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef GAUSS2DPROJECTIONV2_EXT
#define GAUSS2DPROJECTIONV2_EXT

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TF2.h"
 
class gauss2dProjectionV2_Ext : public RooAbsPdf {
public:
  gauss2dProjectionV2_Ext() {} ; 
  gauss2dProjectionV2_Ext(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _y,
	      RooAbsReal& _x01,
	      RooAbsReal& _y01,
	      RooAbsReal& _x_Width1,
	      RooAbsReal& _y_Width1,
	      RooAbsReal& _rho1,
	      RooAbsReal& _x02,
	      RooAbsReal& _y02,
	      RooAbsReal& _x_Width2,
	      RooAbsReal& _y_Width2,
	      RooAbsReal& _rho2);
  gauss2dProjectionV2_Ext(const gauss2dProjectionV2_Ext& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new gauss2dProjectionV2_Ext(*this,newname); }

TF2 *fitFunc = new TF2("fitFunc","100./(TMath::Sqrt([3]*2*3.141593))*exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-15,15,-15,15);

  inline virtual ~gauss2dProjectionV2_Ext() { }

protected:

  RooRealProxy x ;
  RooRealProxy y ;
  RooRealProxy x01 ;
  RooRealProxy y01 ;
  RooRealProxy x_Width1 ;
  RooRealProxy y_Width1 ;
  RooRealProxy rho1 ;
  RooRealProxy x02 ;
  RooRealProxy y02 ;
  RooRealProxy x_Width2 ;
  RooRealProxy y_Width2 ;
  RooRealProxy rho2 ;
  
  Double_t evaluate() const ;

private:

  ClassDef(gauss2dProjectionV2_Ext,1) // Your description goes here...
};
 
#endif
