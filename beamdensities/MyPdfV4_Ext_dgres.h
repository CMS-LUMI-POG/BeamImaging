/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef MYPDFV4_EXT_DGRES
#define MYPDFV4_EXT_DGRES

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TF2.h"
 
class MyPdfV4_Ext_dgres : public RooAbsPdf {
public:
  MyPdfV4_Ext_dgres() {} ; 
  MyPdfV4_Ext_dgres(const char *name, const char *title,
	      RooAbsReal& _xVar ,
	      RooAbsReal& _yVar,
	      RooAbsReal& _x0,
	      RooAbsReal& _y0 ,
	      RooAbsReal& _w1 ,
	      RooAbsReal& _rho_N1 ,
	      RooAbsReal& _xWidthN1 ,
	      RooAbsReal& _yWidthN1 ,
	      RooAbsReal& _rho_W1 ,
	      RooAbsReal& _xWidthW1 ,
	      RooAbsReal& _yWidthW1 ,
	      RooAbsReal& _w2 ,
	      RooAbsReal& _xWidthN2 ,
	      RooAbsReal& _xWidthW2);
  MyPdfV4_Ext_dgres(const MyPdfV4_Ext_dgres& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new MyPdfV4_Ext_dgres(*this,newname); }
  inline virtual ~MyPdfV4_Ext_dgres() { }

protected:

  RooRealProxy xVar  ;
  RooRealProxy yVar ;
  RooRealProxy x0 ;
  RooRealProxy y0  ;
  RooRealProxy w1  ;
  RooRealProxy rho_N1  ;
  RooRealProxy xWidthN1  ;
  RooRealProxy yWidthN1  ;
  RooRealProxy rho_W1  ;
  RooRealProxy xWidthW1  ;
  RooRealProxy yWidthW1  ;
  RooRealProxy w2  ;
  RooRealProxy xWidthN2  ;
  RooRealProxy xWidthW2 ;
  
  TF2 *fit1FuncN1N2 = new TF2("fit1FuncN1N2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit1FuncN1W2 = new TF2("fit1FuncN1W2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit1FuncW1N2 = new TF2("fit1FuncW1N2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit1FuncW1W2 = new TF2("fit1FuncW1W2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);

TF2 *fit2FuncN1N2 = new TF2("fit2FuncN1N2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit2FuncN1W2 = new TF2("fit2FuncN1W2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit2FuncW1N2 = new TF2("fit2FuncW1N2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);
  TF2 *fit2FuncW1W2 = new TF2("fit2FuncW1W2","[4]*1./(2*3.14159*TMath::Sqrt([3]))*TMath::Exp(-0.5*(TMath::Power(x[0],2.0)*[0]+TMath::Power(x[1],2.0)*[1]+2*[2]*x[0]*x[1]))",-30,30,-30,30);

  Double_t evaluate() const ;

private:

  ClassDef(MyPdfV4_Ext_dgres,1) // Your description goes here...
};
 
#endif
